Rule: PROGRAM -> program DEFINITIONS start COMMANDS end 
Rule:DEFINITIONS -> DEFINITION DEFINITIONS_A  
Rule:  DEFINITION -> id DEFINITION_A 
Rule:  DEFINITION_A -> : DEFINITION_A_1 
Rule: DEFINITION_A_1 -> TYPE DEFINITION_A_2  
Rule: TYPE->  integer 
Expected one of tokens TOKEN_CONST ,  at line:  2 
 Actual token TOKEN_SEMICOLON', lexeme: ; 
Rule: DEFINITIONS_A -> , DEFINITION DEFINITIONS_A  
Rule:  DEFINITION -> id DEFINITION_A 
Rule:  DEFINITION_A -> : DEFINITION_A_1 
Rule: DEFINITION_A_1 -> TYPE DEFINITION_A_2  
Rule: TYPE->  integer 
Rule: DEFINITION_A_2-> const := NUMBER 
Rule: NUMBER-> int_num 
Rule: DEFINITIONS_A -> , DEFINITION DEFINITIONS_A  
Rule:  DEFINITION -> id DEFINITION_A 
Rule:  DEFINITION_A -> : DEFINITION_A_1 
Rule: DEFINITION_A_1 -> TYPE DEFINITION_A_2  
Rule: TYPE-> real 
Expected one of tokens TOKEN_CONST ,  at line:  8 
 Actual token TOKEN_ID', lexeme: cons 
Rule: DEFINITIONS_A -> , DEFINITION DEFINITIONS_A  
Rule:  DEFINITION -> id DEFINITION_A 
Rule:  DEFINITION_A ->[DIMENSIONS_LIST] : TYPE 
Rule: DIMENSIONS_LIST -> SIZE  DIMENSIONS_LIST_A
Rule: SIZE-> int_num 
Rule: DIMENSIONS_LIST_A -> , SIZE DIMENSIONS_LIST_A  
Rule: SIZE-> id 
Rule: DIMENSIONS_LIST_A ->epsilon 
Rule: TYPE-> real 
Rule: DEFINITIONS_A -> , DEFINITION DEFINITIONS_A  
Rule:  DEFINITION -> id DEFINITION_A 
Rule:  DEFINITION_A -> : DEFINITION_A_1 
Rule: DEFINITION_A_1 -> TYPE DEFINITION_A_2  
Rule: TYPE->  integer 
Rule: DEFINITION_A_2-> const := NUMBER 
Expected one of tokens TOKEN_INT_NUM or TOKEN_REAL_NUM ,  at line:  12 
 Actual token TOKEN_AR_OP', lexeme: - 
Expected one of tokens TOKEN_COMMA ,  at line:  12 
 Actual token TOKEN_AR_OP', lexeme: - 
Rule: COMMANDS -> COMMAND  COMMANDS_A 
Rule: COMMAND-> RECEIVER := EXPRESSION  
Rule: RECEIVER  -> id  RECEIVER_A 
Expected one of tokens TOKEN_LEFT_BRACKET ,  at line:  16 
 Actual token TOKEN_INT_NUM', lexeme: 0 
Rule: EXPRESSION -> BASIC_EXPRESSION   EXPRESSION_A    
Rule: BASIC_EXPRESSION ->id  BASIC_EXPRESSION_A    
Rule: BASIC_EXPRESSION_A  ->epsilon 
Rule: EXPRESSION_A -> ar_op BASIC_EXPRESSION     
Rule: BASIC_EXPRESSION -> NUMBER  
Rule: NUMBER-> int_num 
Rule: COMMANDS_A  ->  ; COMMANDS 
Rule: COMMANDS -> COMMAND  COMMANDS_A 
Rule: COMMAND-> RECEIVER := EXPRESSION  
Rule: RECEIVER  -> id  RECEIVER_A 
Expected token 'TOKEN_ID' at line: 18 
Actual token 'TOKEN_SEMICOLON',  lexeme:  ';' 
Rule: EXPRESSION -> BASIC_EXPRESSION   EXPRESSION_A    
Rule: BASIC_EXPRESSION ->id  BASIC_EXPRESSION_A    
Rule: BASIC_EXPRESSION_A  ->epsilon 
Rule: EXPRESSION_A ->epsilon   
Rule: COMMANDS_A  ->  ; COMMANDS 
Rule: COMMANDS -> COMMAND  COMMANDS_A 
Rule: COMMAND-> RECEIVER := EXPRESSION  
Rule: RECEIVER  -> id  RECEIVER_A 
Rule: RECEIVER_A -> [EXPRESSIONS_LIST]   
Rule: EXPRESSIONS_LIST-> EXPRESSION EXPRESSIONS_LIST_A   
Rule: EXPRESSION -> BASIC_EXPRESSION   EXPRESSION_A    
Rule: BASIC_EXPRESSION ->id  BASIC_EXPRESSION_A    
Rule: BASIC_EXPRESSION_A  ->epsilon 
Rule: EXPRESSION_A -> ar_op BASIC_EXPRESSION     
Rule: BASIC_EXPRESSION -> NUMBER  
Rule: NUMBER-> int_num 
Expected one of tokens TOKEN_COMMA ,  at line:  22 
 Actual token TOKEN_SEMICOLON', lexeme: ; 
Rule: EXPRESSION -> BASIC_EXPRESSION   EXPRESSION_A    
Rule: BASIC_EXPRESSION ->id  BASIC_EXPRESSION_A    
Rule: BASIC_EXPRESSION_A  ->epsilon 
Rule: EXPRESSION_A -> ar_op BASIC_EXPRESSION     
Rule: BASIC_EXPRESSION -> NUMBER  
Rule: NUMBER-> int_num 
Rule: COMMANDS_A  ->  ; COMMANDS 
Rule: COMMANDS -> COMMAND  COMMANDS_A 
Rule: COMMAND-> RECEIVER := EXPRESSION  
Rule: RECEIVER  -> id  RECEIVER_A 
Rule: RECEIVER_A -> [EXPRESSIONS_LIST]   
Rule: EXPRESSIONS_LIST-> EXPRESSION EXPRESSIONS_LIST_A   
Rule: EXPRESSION -> BASIC_EXPRESSION   EXPRESSION_A    
Rule: BASIC_EXPRESSION ->id  BASIC_EXPRESSION_A    
Rule: BASIC_EXPRESSION_A  ->epsilon 
Rule: EXPRESSION_A ->epsilon   
Rule: EXPRESSIONS_LIST_A -> , EXPRESSIONS_LIST  
Rule: EXPRESSIONS_LIST-> EXPRESSION EXPRESSIONS_LIST_A   
Rule: EXPRESSION -> BASIC_EXPRESSION   EXPRESSION_A    
Rule: BASIC_EXPRESSION ->id  BASIC_EXPRESSION_A    
Rule: BASIC_EXPRESSION_A  -> [EXPRESSIONS_LIST]
Rule: EXPRESSIONS_LIST-> EXPRESSION EXPRESSIONS_LIST_A   
Rule: EXPRESSION -> BASIC_EXPRESSION   EXPRESSION_A    
Rule: BASIC_EXPRESSION ->id  BASIC_EXPRESSION_A    
Rule: BASIC_EXPRESSION_A  ->epsilon 
Rule: EXPRESSION_A -> ar_op BASIC_EXPRESSION     
Rule: BASIC_EXPRESSION -> NUMBER  
Rule: NUMBER-> int_num 
Rule: EXPRESSIONS_LIST_A -> epsilon  
Expected one of tokens TOKEN_AR_OP ,  at line:  24 
 Actual token TOKEN_ASSIGNMENT', lexeme: := 
Expected one of tokens TOKEN_COMMA ,  at line:  24 
 Actual token TOKEN_SEMICOLON', lexeme: ; 
Expected token 'TOKEN_ASSIGNMENT' at line: 42 
Actual token 'TOKEN_RIGHT_CURLY_BRACES',  lexeme:  '}' 
Rule: COMMANDS_A -> epsilon  
Expected token 'TOKEN_END' at line: 42 
Actual token 'TOKEN_RIGHT_CURLY_BRACES',  lexeme:  '}' 

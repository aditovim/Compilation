Rule: PROGRAM -> program DEFINITIONS start COMMANDS end 
Rule:DEFINITIONS -> DEFINITION DEFINITIONS_A  
Rule:  DEFINITION -> id DEFINITION_A 
Rule:  DEFINITION_A -> : DEFINITION_A_1 
Rule: DEFINITION_A_1 -> TYPE DEFINITION_A_2  
Rule: TYPE->  integer 
Rule: DEFINITION_A_2->epsilon 
Rule: DEFINITIONS_A -> , DEFINITION DEFINITIONS_A  
Rule:  DEFINITION -> id DEFINITION_A 
Rule:  DEFINITION_A -> : DEFINITION_A_1 
Rule: DEFINITION_A_1 -> TYPE DEFINITION_A_2  
Rule: TYPE->  integer 
Rule: DEFINITION_A_2->epsilon 
Rule: DEFINITIONS_A -> , DEFINITION DEFINITIONS_A  
Rule:  DEFINITION -> id DEFINITION_A 
Rule:  DEFINITION_A -> : DEFINITION_A_1 
Rule: DEFINITION_A_1 -> TYPE DEFINITION_A_2  
Rule: TYPE->  integer 
Rule: DEFINITION_A_2->epsilon 
Rule: DEFINITIONS_A -> , DEFINITION DEFINITIONS_A  
Rule:  DEFINITION -> id DEFINITION_A 
Rule:  DEFINITION_A -> : DEFINITION_A_1 
Rule: DEFINITION_A_1 -> TYPE DEFINITION_A_2  
Rule: TYPE-> real 
Rule: DEFINITION_A_2->epsilon 
Rule: DEFINITIONS_A -> , DEFINITION DEFINITIONS_A  
Rule:  DEFINITION -> id DEFINITION_A 
Rule:  DEFINITION_A -> : DEFINITION_A_1 
Rule: DEFINITION_A_1 -> TYPE DEFINITION_A_2  
Rule: TYPE->  integer 
Rule: DEFINITION_A_2-> const := NUMBER 
Rule: NUMBER-> int_num 
Rule: DEFINITIONS_A -> , DEFINITION DEFINITIONS_A  
Rule:  DEFINITION -> id DEFINITION_A 
Rule:  DEFINITION_A ->[DIMENSIONS_LIST] : TYPE 
Rule: DIMENSIONS_LIST -> SIZE  DIMENSIONS_LIST_A
Rule: SIZE-> int_num 
Rule: DIMENSIONS_LIST_A ->epsilon 
Rule: TYPE->  integer 
Rule: DEFINITIONS_A -> , DEFINITION DEFINITIONS_A  
Rule:  DEFINITION -> id DEFINITION_A 
Rule:  DEFINITION_A ->[DIMENSIONS_LIST] : TYPE 
Rule: DIMENSIONS_LIST -> SIZE  DIMENSIONS_LIST_A
Rule: SIZE-> int_num 
Rule: DIMENSIONS_LIST_A -> , SIZE DIMENSIONS_LIST_A  
Rule: SIZE-> id 
Rule: DIMENSIONS_LIST_A ->epsilon 
Rule: TYPE->  integer 
Rule: DEFINITIONS_A -> , DEFINITION DEFINITIONS_A  
Rule:  DEFINITION -> id DEFINITION_A 
Rule:  DEFINITION_A ->[DIMENSIONS_LIST] : TYPE 
Rule: DIMENSIONS_LIST -> SIZE  DIMENSIONS_LIST_A
Rule: SIZE-> id 
Rule: DIMENSIONS_LIST_A -> , SIZE DIMENSIONS_LIST_A  
Rule: SIZE-> int_num 
Rule: DIMENSIONS_LIST_A -> , SIZE DIMENSIONS_LIST_A  
Rule: SIZE-> id 
Rule: DIMENSIONS_LIST_A ->epsilon 
Rule: TYPE->  integer 
Rule: DEFINITIONS_A -> , DEFINITION DEFINITIONS_A  
Rule:  DEFINITION -> id DEFINITION_A 
Rule:  DEFINITION_A -> : DEFINITION_A_1 
Rule:   DEFINITION_A_1  -> exception  
Rule:DEFINITIONS_A ->epsilon 
Rule: COMMANDS -> COMMAND  COMMANDS_A 
Rule: COMMAND-> RECEIVER := EXPRESSION  
Rule: RECEIVER  -> id  RECEIVER_A 
Rule: RECEIVER_A -> epsilon  
Rule: EXPRESSION -> BASIC_EXPRESSION   EXPRESSION_A    
Rule: BASIC_EXPRESSION -> NUMBER  
Rule: NUMBER-> int_num 
Rule: EXPRESSION_A ->epsilon   
Rule: COMMANDS_A  ->  ; COMMANDS 
Rule: COMMANDS -> COMMAND  COMMANDS_A 
Rule: COMMAND-> RECEIVER := EXPRESSION  
Rule: RECEIVER  -> id  RECEIVER_A 
Rule: RECEIVER_A -> epsilon  
Rule: EXPRESSION -> BASIC_EXPRESSION   EXPRESSION_A    
Rule: BASIC_EXPRESSION -> NUMBER  
Rule: NUMBER-> real_num 
Rule: EXPRESSION_A ->epsilon   
Rule: COMMANDS_A  ->  ; COMMANDS 
Rule: COMMANDS -> COMMAND  COMMANDS_A 
Rule: COMMAND-> RECEIVER := EXPRESSION  
Rule: RECEIVER  -> id  RECEIVER_A 
Rule: RECEIVER_A -> epsilon  
Rule: EXPRESSION -> BASIC_EXPRESSION   EXPRESSION_A    
Rule: BASIC_EXPRESSION ->id  BASIC_EXPRESSION_A    
Rule: BASIC_EXPRESSION_A  ->epsilon 
Rule: EXPRESSION_A -> ar_op BASIC_EXPRESSION     
Rule: BASIC_EXPRESSION -> NUMBER  
Rule: NUMBER-> real_num 
Rule: COMMANDS_A  ->  ; COMMANDS 
Rule: COMMANDS -> COMMAND  COMMANDS_A 
Rule: COMMAND-> RECEIVER := EXPRESSION  
Rule: RECEIVER  -> id  RECEIVER_A 
Rule: RECEIVER_A -> [EXPRESSIONS_LIST]   
Rule: EXPRESSIONS_LIST-> EXPRESSION EXPRESSIONS_LIST_A   
Rule: EXPRESSION -> BASIC_EXPRESSION   EXPRESSION_A    
Rule: BASIC_EXPRESSION -> NUMBER  
Rule: NUMBER-> int_num 
Rule: EXPRESSION_A ->epsilon   
Rule: EXPRESSIONS_LIST_A -> epsilon  
Rule: EXPRESSION -> BASIC_EXPRESSION   EXPRESSION_A    
Rule: BASIC_EXPRESSION ->id  BASIC_EXPRESSION_A    
Rule: BASIC_EXPRESSION_A  ->epsilon 
Rule: EXPRESSION_A ->epsilon   
Rule: COMMANDS_A  ->  ; COMMANDS 
Rule: COMMANDS -> COMMAND  COMMANDS_A 
Rule: COMMAND-> RECEIVER := EXPRESSION  
Rule: RECEIVER  -> id  RECEIVER_A 
Rule: RECEIVER_A -> [EXPRESSIONS_LIST]   
Rule: EXPRESSIONS_LIST-> EXPRESSION EXPRESSIONS_LIST_A   
Rule: EXPRESSION -> BASIC_EXPRESSION   EXPRESSION_A    
Rule: BASIC_EXPRESSION -> NUMBER  
Rule: NUMBER-> int_num 
Rule: EXPRESSION_A ->epsilon   
Rule: EXPRESSIONS_LIST_A -> , EXPRESSIONS_LIST  
Rule: EXPRESSIONS_LIST-> EXPRESSION EXPRESSIONS_LIST_A   
Rule: EXPRESSION -> BASIC_EXPRESSION   EXPRESSION_A    
Rule: BASIC_EXPRESSION ->id  BASIC_EXPRESSION_A    
Rule: BASIC_EXPRESSION_A  ->epsilon 
Rule: EXPRESSION_A ->epsilon   
Rule: EXPRESSIONS_LIST_A -> , EXPRESSIONS_LIST  
Rule: EXPRESSIONS_LIST-> EXPRESSION EXPRESSIONS_LIST_A   
Rule: EXPRESSION -> BASIC_EXPRESSION   EXPRESSION_A    
Rule: BASIC_EXPRESSION -> NUMBER  
Rule: NUMBER-> int_num 
Rule: EXPRESSION_A ->epsilon   
Rule: EXPRESSIONS_LIST_A -> epsilon  
Rule: EXPRESSION -> BASIC_EXPRESSION   EXPRESSION_A    
Rule: BASIC_EXPRESSION ->id  BASIC_EXPRESSION_A    
Rule: BASIC_EXPRESSION_A  -> [EXPRESSIONS_LIST]
Rule: EXPRESSIONS_LIST-> EXPRESSION EXPRESSIONS_LIST_A   
Rule: EXPRESSION -> BASIC_EXPRESSION   EXPRESSION_A    
Rule: BASIC_EXPRESSION -> NUMBER  
Rule: NUMBER-> int_num 
Rule: EXPRESSION_A ->epsilon   
Rule: EXPRESSIONS_LIST_A -> epsilon  
Rule: EXPRESSION_A ->epsilon   
Rule: COMMANDS_A  ->  ; COMMANDS 
Rule: COMMANDS -> COMMAND  COMMANDS_A 
Rule: COMMAND-> RECEIVER := EXPRESSION  
Rule: RECEIVER  -> id  RECEIVER_A 
Rule: RECEIVER_A -> epsilon  
Rule: EXPRESSION -> BASIC_EXPRESSION   EXPRESSION_A    
Rule: BASIC_EXPRESSION -> NUMBER  
Rule: NUMBER-> int_num 
Rule: EXPRESSION_A ->epsilon   
Rule: COMMANDS_A  ->  ; COMMANDS 
Rule: COMMANDS -> COMMAND  COMMANDS_A 
Rule:  COMMAND -> when CONDITION do COMMANDS otherwise COMMANDS done 
Rule:CONDITION -> id  rel_op  EXPRESSION  
Rule: EXPRESSION -> BASIC_EXPRESSION   EXPRESSION_A    
Rule: BASIC_EXPRESSION -> NUMBER  
Rule: NUMBER-> int_num 
Rule: EXPRESSION_A ->epsilon   
Rule: COMMANDS -> COMMAND  COMMANDS_A 
Rule: COMMAND-> RECEIVER := EXPRESSION  
Rule: RECEIVER  -> id  RECEIVER_A 
Rule: RECEIVER_A -> epsilon  
Rule: EXPRESSION -> BASIC_EXPRESSION   EXPRESSION_A    
Rule: BASIC_EXPRESSION -> NUMBER  
Rule: NUMBER-> int_num 
Rule: EXPRESSION_A ->epsilon   
Rule: COMMANDS_A  ->  ; COMMANDS 
Rule: COMMANDS -> COMMAND  COMMANDS_A 
Rule: COMMAND->  cycle COMMANDS until CONDITION end_cycle  
Rule: COMMANDS -> COMMAND  COMMANDS_A 
Rule: COMMAND-> RECEIVER := EXPRESSION  
Rule: RECEIVER  -> id  RECEIVER_A 
Rule: RECEIVER_A -> [EXPRESSIONS_LIST]   
Rule: EXPRESSIONS_LIST-> EXPRESSION EXPRESSIONS_LIST_A   
Rule: EXPRESSION -> BASIC_EXPRESSION   EXPRESSION_A    
Rule: BASIC_EXPRESSION ->id  BASIC_EXPRESSION_A    
Rule: BASIC_EXPRESSION_A  ->epsilon 
Rule: EXPRESSION_A ->epsilon   
Rule: EXPRESSIONS_LIST_A -> , EXPRESSIONS_LIST  
Rule: EXPRESSIONS_LIST-> EXPRESSION EXPRESSIONS_LIST_A   
Rule: EXPRESSION -> BASIC_EXPRESSION   EXPRESSION_A    
Rule: BASIC_EXPRESSION ->id  BASIC_EXPRESSION_A    
Rule: BASIC_EXPRESSION_A  ->epsilon 
Rule: EXPRESSION_A ->epsilon   
Rule: EXPRESSIONS_LIST_A -> epsilon  
Rule: EXPRESSION -> BASIC_EXPRESSION   EXPRESSION_A    
Rule: BASIC_EXPRESSION ->id  BASIC_EXPRESSION_A    
Rule: BASIC_EXPRESSION_A  ->epsilon 
Rule: EXPRESSION_A -> ar_op BASIC_EXPRESSION     
Rule: BASIC_EXPRESSION ->id  BASIC_EXPRESSION_A    
Rule: BASIC_EXPRESSION_A  ->epsilon 
Rule: COMMANDS_A  ->  ; COMMANDS 
Rule: COMMANDS -> COMMAND  COMMANDS_A 
Rule: COMMAND->  raise id  
Rule: COMMANDS_A -> epsilon  
Rule:CONDITION -> id  rel_op  EXPRESSION  
Rule: EXPRESSION -> BASIC_EXPRESSION   EXPRESSION_A    
Rule: BASIC_EXPRESSION ->id  BASIC_EXPRESSION_A    
Rule: BASIC_EXPRESSION_A  ->epsilon 
Rule: EXPRESSION_A ->epsilon   
Rule: COMMANDS_A  ->  ; COMMANDS 
Rule: COMMANDS -> COMMAND  COMMANDS_A 
Rule: COMMAND->  raise id  
Rule: COMMANDS_A -> epsilon  
Rule: COMMANDS -> COMMAND  COMMANDS_A 
Rule: COMMAND->  raise id  
Rule: COMMANDS_A -> epsilon  
Rule: COMMANDS_A  ->  ; COMMANDS 
Rule: COMMANDS -> COMMAND  COMMANDS_A 
Rule: COMMAND-> { DEFINITIONS start COMMANDS }  
Rule:DEFINITIONS -> DEFINITION DEFINITIONS_A  
Rule:  DEFINITION -> id DEFINITION_A 
Rule:  DEFINITION_A -> : DEFINITION_A_1 
Rule: DEFINITION_A_1 -> TYPE DEFINITION_A_2  
Rule: TYPE->  integer 
Rule: DEFINITION_A_2->epsilon 
Rule: DEFINITIONS_A -> , DEFINITION DEFINITIONS_A  
Rule:  DEFINITION -> id DEFINITION_A 
Rule:  DEFINITION_A -> : DEFINITION_A_1 
Rule: DEFINITION_A_1 -> TYPE DEFINITION_A_2  
Rule: TYPE->  integer 
Rule: DEFINITION_A_2->epsilon 
Rule: DEFINITIONS_A -> , DEFINITION DEFINITIONS_A  
Rule:  DEFINITION -> id DEFINITION_A 
Rule:  DEFINITION_A -> : DEFINITION_A_1 
Rule: DEFINITION_A_1 -> TYPE DEFINITION_A_2  
Rule: TYPE-> real 
Rule: DEFINITION_A_2->epsilon 
Rule:DEFINITIONS_A ->epsilon 
Rule: COMMANDS -> COMMAND  COMMANDS_A 
Rule: COMMAND-> RECEIVER := EXPRESSION  
Rule: RECEIVER  -> id  RECEIVER_A 
Rule: RECEIVER_A -> epsilon  
Rule: EXPRESSION -> BASIC_EXPRESSION   EXPRESSION_A    
Rule: BASIC_EXPRESSION -> NUMBER  
Rule: NUMBER-> int_num 
Rule: EXPRESSION_A ->epsilon   
Rule: COMMANDS_A  ->  ; COMMANDS 
Rule: COMMANDS -> COMMAND  COMMANDS_A 
Rule: COMMAND-> RECEIVER := EXPRESSION  
Rule: RECEIVER  -> id  RECEIVER_A 
Rule: RECEIVER_A -> epsilon  
Rule: EXPRESSION -> BASIC_EXPRESSION   EXPRESSION_A    
Rule: BASIC_EXPRESSION ->id  BASIC_EXPRESSION_A    
Rule: BASIC_EXPRESSION_A  ->epsilon 
Rule: EXPRESSION_A -> ar_op BASIC_EXPRESSION     
Rule: BASIC_EXPRESSION ->id  BASIC_EXPRESSION_A    
Rule: BASIC_EXPRESSION_A  -> [EXPRESSIONS_LIST]
Rule: EXPRESSIONS_LIST-> EXPRESSION EXPRESSIONS_LIST_A   
Rule: EXPRESSION -> BASIC_EXPRESSION   EXPRESSION_A    
Rule: BASIC_EXPRESSION ->id  BASIC_EXPRESSION_A    
Rule: BASIC_EXPRESSION_A  ->epsilon 
Rule: EXPRESSION_A ->epsilon   
Rule: EXPRESSIONS_LIST_A -> , EXPRESSIONS_LIST  
Rule: EXPRESSIONS_LIST-> EXPRESSION EXPRESSIONS_LIST_A   
Rule: EXPRESSION -> BASIC_EXPRESSION   EXPRESSION_A    
Rule: BASIC_EXPRESSION ->id  BASIC_EXPRESSION_A    
Rule: BASIC_EXPRESSION_A  -> [EXPRESSIONS_LIST]
Rule: EXPRESSIONS_LIST-> EXPRESSION EXPRESSIONS_LIST_A   
Rule: EXPRESSION -> BASIC_EXPRESSION   EXPRESSION_A    
Rule: BASIC_EXPRESSION ->id  BASIC_EXPRESSION_A    
Rule: BASIC_EXPRESSION_A  ->epsilon 
Rule: EXPRESSION_A ->epsilon   
Rule: EXPRESSIONS_LIST_A -> , EXPRESSIONS_LIST  
Rule: EXPRESSIONS_LIST-> EXPRESSION EXPRESSIONS_LIST_A   
Rule: EXPRESSION -> BASIC_EXPRESSION   EXPRESSION_A    
Rule: BASIC_EXPRESSION ->id  BASIC_EXPRESSION_A    
Rule: BASIC_EXPRESSION_A  -> [EXPRESSIONS_LIST]
Rule: EXPRESSIONS_LIST-> EXPRESSION EXPRESSIONS_LIST_A   
Rule: EXPRESSION -> BASIC_EXPRESSION   EXPRESSION_A    
Rule: BASIC_EXPRESSION -> NUMBER  
Rule: NUMBER-> int_num 
Rule: EXPRESSION_A ->epsilon   
Rule: EXPRESSIONS_LIST_A -> epsilon  
Rule: EXPRESSION_A ->epsilon   
Rule: EXPRESSIONS_LIST_A -> epsilon  
Rule: EXPRESSION_A ->epsilon   
Rule: EXPRESSIONS_LIST_A -> , EXPRESSIONS_LIST  
Rule: EXPRESSIONS_LIST-> EXPRESSION EXPRESSIONS_LIST_A   
Rule: EXPRESSION -> BASIC_EXPRESSION   EXPRESSION_A    
Rule: BASIC_EXPRESSION ->id  BASIC_EXPRESSION_A    
Rule: BASIC_EXPRESSION_A  ->epsilon 
Rule: EXPRESSION_A ->epsilon   
Rule: EXPRESSIONS_LIST_A -> epsilon  
Rule: COMMANDS_A -> epsilon  
Rule: COMMANDS_A -> epsilon  
